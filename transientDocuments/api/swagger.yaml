---
swagger: "2.0"
info:
  version: "6.0.0"
  title: "AdobeSign Transient Documents APIs"
basePath: "/api/rest/v6"
paths:
  /transientDocuments:
    post:
      summary: "Uploads a document and obtains the document's ID."
      description: "The document uploaded through this call is referred to as transient\
        \ since it is available only for 7 days after the upload. The returned transient\
        \ document ID can be used in the API calls where\_the uploaded file needs\
        \ to be referred. The transient document request is a multipart request consisting\
        \ of three parts - filename, mime type and the file stream. You can only upload\
        \ one file at a time in this request."
      operationId: "createTransientDocument"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "An <a href=\"#\" onclick=\"this.href=oauthDoc()\" oncontextmenu=\"\
          this.href=oauthDoc()\" target=\"oauthDoc\">OAuth Access Token</a> with any\
          \ of the following scopes:<ul><li style='list-style-type: square'><a href=\"\
          #\" onclick=\"this.href=oauthDoc('agreement_write')\" oncontextmenu=\"this.href=oauthDoc('agreement_write')\"\
          \ target=\"oauthDoc\">agreement_write</a></li><li style='list-style-type:\
          \ square'><a href=\"#\" onclick=\"this.href=oauthDoc('agreement_sign')\"\
          \ oncontextmenu=\"this.href=oauthDoc('agreement_sign')\" target=\"oauthDoc\"\
          >agreement_sign</a></li><li style='list-style-type: square'><a href=\"#\"\
          \ onclick=\"this.href=oauthDoc('widget_write')\" oncontextmenu=\"this.href=oauthDoc('widget_write')\"\
          \ target=\"oauthDoc\">widget_write</a></li><li style='list-style-type: square'><a\
          \ href=\"#\" onclick=\"this.href=oauthDoc('library_write')\" oncontextmenu=\"\
          this.href=oauthDoc('library_write')\" target=\"oauthDoc\">library_write</a></li></ul>in\
          \ the format <b>'Bearer {accessToken}'."
        required: true
        type: "string"
        x-exportParamName: "Authorization"
      - name: "x-api-user"
        in: "header"
        description: "The userId or email of API caller using the account or group\
          \ token in the format <b>userid:{userId} OR email:{email}.</b> If it is\
          \ not specified, then the caller is inferred from the token."
        required: false
        type: "string"
        x-exportParamName: "XApiUser"
        x-optionalDataType: "String"
      - name: "x-on-behalf-of-user"
        in: "header"
        description: "The userId or email in the format <b>userid:{userId} OR email:{email}.</b>\
          \ of the user that has shared his/her account"
        required: false
        type: "string"
        x-exportParamName: "XOnBehalfOfUser"
        x-optionalDataType: "String"
      - name: "File-Name"
        in: "formData"
        description: "A name for the document being uploaded. Maximum number of characters\
          \ in the name is restricted to 255."
        required: false
        type: "string"
        x-exportParamName: "FileName"
        x-optionalDataType: "String"
      - name: "Mime-Type"
        in: "formData"
        description: "The mime type of the document being uploaded. If not specified\
          \ here then mime type is picked up from the file object. If mime type is\
          \ not present there either then mime type is inferred from file name extension."
        required: false
        type: "string"
        x-exportParamName: "MimeType"
        x-optionalDataType: "String"
      - name: "File"
        in: "formData"
        description: "The file part of the multipart request for document upload.\
          \ You can upload only one file at a time."
        required: true
        type: "file"
        x-exportParamName: "File"
      responses:
        "200":
          description: "No response was specified"
          schema:
            $ref: "#/definitions/TransientDocumentResponse"
      security:
      - oauth2:
        - "agreement_write"
        - "agreement_sign"
        - "widget_write"
        - "library_write"
definitions:
  TransientDocumentResponse:
    required:
    - "transientDocumentId"
    properties:
      transientDocumentId:
        type: "string"
        description: "The unique identifier of the uploaded document that can be used\
          \ in an agreement or a megaSign or widget creation call"
    example:
      transientDocumentId: "transientDocumentId"
